@charset "UTF-8";
/* 주석2 */
/********************************************* 
    [ 사스 핵심 사용법 ]

    1. 사스 확장자별 파일구분
    (1) .scss - 사스관리파일
    -> .sass 확장자는 중괄호,세미콜론 사용하지않는
    문법 사스파일임. 우리는 scss파일을 사용할 것임
    (2) .css.map - 사스파일과 CSS연결정보 파일
    (3) .css - 실제로 적용되는 컴파일된 CSS

    2. 사스파일 컴파일하기
    ->Live Sass Compiler 확장프로그램 설치후
    하단 "Watch Sass" 클릭하여 작동시킴

    -> 에러가 없는한!!! 컴파일하여 같은 이름의
    css파일을 생성함 "Watching..."상태가됨.
    다시클릭시 실시간 변환상태가 꺼진다.

    -> 에러 발생시 컴파일이 안되고 cmd창에
    에러메시지가 나온다!

    3. 주요 문법
    (1) 네스팅 기법 
        - 선택자 중괄호안에 다른 하위선택을 하는것!
        예) div{h1{color:red;}}
        -> 장점: 같은 셋팅요소를 선택시 중복된
        선택자의 반복을 하지 않아도 된다!
        또한 같은 구성요소를 묶어서 셋팅 관리가능!

    (2) 속성접두어 묶음기법
        - 반복되는 같은 종류의 하위속성의 접두어를
        한번만 사용하여 셋팅을 묶어주는 방법
        예) font: {size:12px; weight:bold;}

    (3) 변수사용기법
        - 동일하게 사용할 값을 변수에 넣고 디자인을 배치함
        - 변수사용법-> $변수명: 값
        - 변수명은 모두 붙여쓰며 구분단어는
        캐믈케이스(camelCase) 또는 
        캐밥케이스(camel-case)를 사용한다
        - 변수의 범위는 변수를 선언후 하위로 상속되어 값이유지됨

    (4) 파일 분리기법 : @import
        - 부분파일을 분리하여 공통모듈로 합쳐서 사용한다!
        - 부분파일명은 사스에서 언더바를 붙여서 사용하는것이
        원칙이지만 언더바를 안써도 기본적으로 부분파일처리해줌!
        - 파일호출시 확장자 생략가능함!
        예) @import "reset";
        - 일반 CSS @import 와는 다른점은 http요청을 하지 않음


*********************************************/
.wrapper {
  max-width: 1000px;
  margin: 0 auto;
}

/* 상단영역 */
.top-area {
  color: #d10000;
}
.top-area h1 {
  color: aqua;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4666666667);
  background-color: #ff5656;
  background-image: url(../images/flower.png);
  background-size: 70px;
  background-position: center;
  background-repeat: repeat-x;
  padding: 20px;
}/*# sourceMappingURL=main.css.map */